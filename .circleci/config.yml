version: 2

references:
  defaults: &defaults
    working_directory: ~/grpc-gen
    machine: true

jobs:
  lint:
    <<: *defaults
    steps:
    - checkout
    - run:
        name: Lint
        command: for file in `find ${CIRCLE_PROJECT_REPONAME} -name '*.proto'`; do docker run -v $(pwd):/$(pwd) -w $(pwd) znly/protoc -I. --lint_out=. $file; done
    - persist_to_workspace:
        root: .
        paths:
        - .

  build:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Clean up
        command: rm -rf gen
    - run:
        name: Check dir
        command: ls
    - run:
        name: Generate gRPC for go
        command: for file in `find ${CIRCLE_PROJECT_REPONAME} -name '*.proto'`; do docker run -v $(pwd):/defs namely/protoc-all -f $file -l go -i ./ ; done
    - run:
        name: Generate gRPC for python
        command: for file in `find ${CIRCLE_PROJECT_REPONAME} -name '*.proto'`; do docker run -v $(pwd):/defs namely/protoc-all -f $file -l python -i ./ ; done
    - run:
        name: Generate gRPC for typescript
        command: docker run -t --rm -v $(pwd):$(pwd) -w $(pwd) kaito22/grpc-gen-typescript:0.1.0 ./protoc.sh
    - persist_to_workspace:
        root: .
        paths:
        - .

  push:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: git config
        command: |
          git config --global user.email "doumintyu1017@gmail.com"
          git config --global user.name "Generator Bot"
    - run:
        name: git clone go
        command: |
          echo "clone go"
          clonesuccess=0
          git clone https://${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}go.git || clonesuccess=$?
          if [ $clonesuccess -eq 128 ]; then
            echo "go repository is not found"
            exit -1
          fi
          git -C ./${CIRCLE_PROJECT_REPONAME}go rm --cached -r .
          rm -r ${CIRCLE_PROJECT_REPONAME}go/*
          cp -r gen/pb-go/github.com/kaito2/${CIRCLE_PROJECT_REPONAME}go/* ${CIRCLE_PROJECT_REPONAME}go/
          cp -r version_manage/go/* ${CIRCLE_PROJECT_REPONAME}go/
          result=0
          git -C ./${CIRCLE_PROJECT_REPONAME}go add .
          git -C ./${CIRCLE_PROJECT_REPONAME}go commit -m "gen" || result=$?
          if [ $result -eq 0 ]; then
            git -C ./${CIRCLE_PROJECT_REPONAME}go push origin master 2> /dev/null
          fi

    - run:
        name: git commit python-src
        command: |
          echo "clone python"
          clonesuccess=0
          git clone https://${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}python.git || clonesuccess=$?
          if [ $clonesuccess -eq 128 ]; then
            echo "python repository is not found"
            exit -1
          fi
          git -C ./${CIRCLE_PROJECT_REPONAME}python rm --cached -r .
          rm -r ${CIRCLE_PROJECT_REPONAME}python/*
          cp -r gen/pb_python/${CIRCLE_PROJECT_REPONAME}/* ${CIRCLE_PROJECT_REPONAME}python/
          result=0
          git -C ./${CIRCLE_PROJECT_REPONAME}python add .
          git -C ./${CIRCLE_PROJECT_REPONAME}python commit -m "gen" || result=$?
          if [ $result -eq 0 ]; then
            git -C ./${CIRCLE_PROJECT_REPONAME}python push origin master 2> /dev/null
          fi
    - run:
        name: git commit typescript-src
        command: |
          echo "clone typescript"
          clonesuccess=0
          git clone https://${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}typescript.git || clonesuccess=$?
          if [ $clonesuccess -eq 128 ]; then
            echo "typescript repository is not found"
            exit -1
          fi
          git -C ./${CIRCLE_PROJECT_REPONAME}typescript rm --cached -r .
          rm -r ${CIRCLE_PROJECT_REPONAME}typescript/*
          cp -r gen/pb-typescript/${CIRCLE_PROJECT_REPONAME}/* ${CIRCLE_PROJECT_REPONAME}typescript/
          result=0
          git -C ./${CIRCLE_PROJECT_REPONAME}typescript add .
          git -C ./${CIRCLE_PROJECT_REPONAME}typescript commit -m "gen" || result=$?
          if [ $result -eq 0 ]; then
            git -C ./${CIRCLE_PROJECT_REPONAME}typescript push origin master 2> /dev/null
          fi

workflows:
  version: 2
  build_and_push:
    jobs:
    - lint
    - build:
        requires:
        - lint
        filters:
          branches:
            only:
            - master
    - push:
        requires:
        - lint
        - build
        filters:
          branches:
            only:
            - master