version: 2

references:
  defaults: &defaults
    working_directory: ~/grpc-gen
    machine: true

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Lint
          command: for file in `find ssigmaapi -name '*.proto'`; do docker run -v $(pwd):/$(pwd) -w $(pwd) znly/protoc -I. --lint_out=. $file; done
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Clean up
          command: rm -rf gen
      - run:
          name: Check dir
          command: ls
      - run:
          name: Generate gRPC for go
          command: for file in `find ssigmaapi -name '*.proto'`; do docker run -v $(pwd):/defs namely/protoc-all -f $file -l go -i ./ ; done
      - run:
          name: Generate gRPC for python
          command: for file in `find ssigmaapi -name '*.proto'`; do docker run -v $(pwd):/defs namely/protoc-all -f $file -l python -i ./ ; done
      - persist_to_workspace:
          root: .
          paths:
            - .

  push:
    <<: *defaults
    steps:
      - attach_workspace:
        at: .
      - run:
        name: git config
        command: |
          git config --global user.email "doumintyu1017@gmail.com"
          git config --global user.name "Generator Bot"
      - run:
        name: git clone go
        command: |
          echo "clone go"
          git clone https://${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}go.git
          git -C ./ssigmaapigo rm --cached -r .
          rm -r ssigmaapigo/*
          cp -r gen/pb-go/github.com/kaito2/ssigmaapigo/* ssigmaapigo/
          cp -r version_manage/go/* ssigmaapigo/
          git -C ./ssigmaapigo add .
          git -C ./ssigmaapigo commit -m "gen"
          git -C ./ssigmaapigo push origin master
      - run:
        name: git commit python-src
        command: |
          if [ `git branch -r --list origin/generated/python | wc -l` -eq 1 ]; then
            echo "checkout generated/python"
            git fetch origin
            git worktree add -b generated/python ../python-src origin/generated/python
            git -C ../python-src rm `git -C ../python-src ls-files`
          else
            echo "create generated/python"
            git worktree add --detach ../python-src
            git -C ../python-src checkout --orphan generated/python
            git -C ../python-src rm --cached -r .
            git -C ../python-src clean -d -f
          fi
          cp -a gen/pb_python/ssigmaapi/* ../python-src/
          git -C ../python-src add -A
          git -C ../python-src status
          result=0
          git -C ../python-src commit -m "AUTO GENERATED [ci skip]" || result=$?
          if [ $result -eq 0 ]; then
            git -C ../python-src push upstream generated/python 2> /dev/null
          fi

workflows:
  version: 2
  build_and_push:
    jobs:
    - lint
    - build:
      requires:
      - lint
      filters:
      branches:
      only:
      - master
    - push:
      requires:
      - lint
      - build
      filters:
      branches:
      only:
      - master